var temperature = "";
var windSpeed = "";
var windDirection = "";
var windChill = "";
var sunrise = "";
var sunset = "";
var high = "";
var low = "";
var condition = "";
var todaysHigh = "";
var todaysLow = "";
var tomorrowsHigh = "";
var tomorrowsLow = "";
var tomorrowsCondition = "";

blankLabels();
setScreen("mainScreen");

onEvent("CityInput","change",function(){
  console.log(getText("CityInput"));
  getWeather(getText("CityInput"));
  setWeatherIcon(condition);
  updateLabels();
  showElement("nextDayButton");
});

onEvent("nextDayButton","click",function(){
  setScreen("forecastScreen1");
  setTomorrrowsWeatherIcon(tomorrowsCondition);
  updateLabels();
});

function updateLabels(){
  setText("conditionLabel",condition);
  setText("tempLabel",temperature + "°F");
  setText("todaysHighLabel","High: " + todaysHigh + "°F");
  setText("todaysLowLabel","Low: " + todaysLow + "°F");
  setText("windspeedLabel","Wind: " + windSpeed + "MPH");
  setText("sunsetLabel","Sunset: " + sunset);
  showElement("CurrentWeatherLabel");
  showElement("laterTodayLabel");
  setText("tomorrowTemp",tomorrowsHigh);
}

function getWeather(city){
  var query = encodeURI('select * from weather.forecast where woeid in (select woeid from geo.places(1) where text="' + city + '")');
  var url = "https://query.yahooapis.com/v1/public/yql?q=" + query+"&format=json"; 
  try{
    startWebRequest(url, function(status, type, content) {
      var jsonData = JSON.parse(content);
      //console.log(jsonData);
      parseJSON(jsonData);
      console.log(temperature);
    });
  } catch(SyntaxError){}
}

function blankLabels() {
  setText("conditionLabel","");
  setText("todaysHighLabel","");
  setText("todaysLowLabel","");
  setText("windspeedLabel","");
  setText("sunsetLabel","");
  setText("tomorrowTemp","");
  setText("tomorrowsConditionLabel","");
}

function setTomorrrowsWeatherIcon(condition){
  switch(condition.toLowerCase()){
                case "partly cloudy":
                  setTomorrrowsIcon("tomorrowPartlyCloudy");
                  break;
                case "mostly cloudy":
                  setTomorrrowsIcon("tomorrowPartlyCloudy");
                  break;
                case "breezy":
                  setTomorrrowsIcon("tomorrowSunny");
                  break;
                case "foggy":
                  setTomorrrowsIcon("tomorrowFoggy");
                  break;
                case "showers":
                  setTomorrrowsIcon("tomorrowRain");
                  break;
                case "drizzle":
                  setTomorrrowsIcon("tomorrowLittleRain");
                  break;
                case "cloudy":
                  setTomorrrowsIcon("tomorrowCloudy");
                  break;
                case "sleet":
                  setTomorrrowsIcon("tomorrowSleet");
                  break;
                case "flurries":
                  setTomorrrowsIcon("tomorrowSnow");
                  break;
                case "snow showers":
                  setTomorrrowsIcon("tomorrowSnow");
                  break;
                case "snow":
                  setTomorrrowsIcon("tomorrowSnow");
                  break;
                case "isolated thunderstorms":
                  setTomorrrowsIcon("tomorrowStorm");
                  break;
                case "scattered thunderstorms":
                  setTomorrrowsIcon("tomorrowStorm");
                  break;
                case "isolated thundershowers":
                  setTomorrrowsIcon("tomorrowStorm");
                  break;
                default:
                  setTomorrrowsIcon("tomorrowSunny");
                  break;
  }
}

function setWeatherIcon(condition){
  switch(condition.toLowerCase()){
                case "partly cloudy":
                  setIcon("partlyCloudyImage");
                  break;
                case "mostly cloudy":
                  setIcon("partlyCloudyImage");
                  break;
                case "breezy":
                  setIcon("sunnyImage");
                  break;
                case "foggy":
                  setIcon("foggyImage");
                  break;
                case "showers":
                  setIcon("rainImage");
                  break;
                case "drizzle":
                  setIcon("littleRainImage");
                  break;
                case "cloudy":
                  setIcon("cloudyImage");
                  break;
                case "sleet":
                  setIcon("sleetImage");
                  break;
                case "flurries":
                  setIcon("snowImage");
                  break;
                case "snow showers":
                  setIcon("snowImage");
                  break;
                case "snow":
                  setIcon("snowImage");
                  break;
                case "isolated thunderstorms":
                  setIcon("stormImage");
                  break;
                case "scattered thunderstorms":
                  setIcon("stormImage");
                  break;
                case "isolated thundershowers":
                  setIcon("stormImage");
                  break;
                default:
                  setIcon("sunnyImage");
                  break;
  }
}

function setIcon(icon){
  hideElement("foggyImage");
  hideElement("cloudyImage");
  hideElement("littleRainImage");
  hideElement("partlyCloudyImage");
  hideElement("rainImage");
  hideElement("sleetImage");
  hideElement("snowImage");
  hideElement("stormImage");
  hideElement("sunnyImage");
  showElement(icon);
}

function setTomorrrowsIcon(icon){
  hideElement("tomorrowFoggy");
  hideElement("tomorrowCloudy");
  hideElement("tomorrowLittleRain");
  hideElement("tomorrowPartlyCloudy");
  hideElement("tomorrowRain");
  hideElement("tomorrowSleet");
  hideElement("tomorrowSnow");
  hideElement("tomorrowStorm");
  hideElement("tomorrowSunny");
  showElement(icon);
}

function parseJSON(jsonData){
  temperature =   jsonData.query.results.channel.item.condition.temp;
  windSpeed =     jsonData.query.results.channel.wind.speed;
  windDirection = jsonData.query.results.channel.wind.direction;
  windChill =     jsonData.query.results.channel.wind.chill;
  sunrise =       jsonData.query.results.channel.astronomy.sunrise;
  sunset =        jsonData.query.results.channel.astronomy.sunset;
  high =          jsonData.query.results.channel.item.forecast.high;
  low =           jsonData.query.results.channel.item.forecast.low;
  condition =     jsonData.query.results.channel.item.condition.text;
  todaysHigh =    //jsonData.query.results.channel.item.forecast.split("{")[0].split(",")[3].split(":")[1].split("\"")[3];
  todaysHigh = String(jsonData.query.results.channel.item.forecast[0].high);
  todaysLow = String(jsonData.query.results.channel.item.forecast[0].low);
  tomorrowsHigh = String(jsonData.query.results.channel.item.forecast[1].high);
  tomorrowsLow = String(jsonData.query.results.channel.item.forecast[1].low);
  tomorrowsCondition = String(jsonData.query.results.channel.item.forecast[1].text);
  console.log("High: " + todaysHigh);
  console.log("Low: " + todaysLow);
  console.log("Condition: " + condition);
}
